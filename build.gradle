buildscript {
	repositories {
		mavenCentral()
		maven {
			url 'https://repo.spring.io/release'
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:3.4.1"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4' apply false
	id 'io.spring.dependency-management' version '1.1.7' apply false
}

ext {
	springBootVersion = '3.4.4'
	springCloudVersion = '2024.0.1'

	postgresVersion = "42.7.5"

	lombokVersion = '1.18.30'
	mapstructVersion = "1.5.3.Final"
	lombokMapstructBindingVersion = "0.2.0"

	caffeineVersion = "3.1.8"

	jsonWebTokenVersion = "0.11.5"
}

allprojects {
	group = 'com.alextim'
	version = '0.0.1-SNAPSHOT'

	repositories {
		mavenCentral()
		maven { url 'https://repo.spring.io/release' }
	}
}

subprojects { project ->

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(21)
		}
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	dependencies {
		//========== Config ==========


		//========== Web ==========
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'

		//========== Mapper ==========
		implementation "org.mapstruct:mapstruct:${mapstructVersion}"
		annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
		annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

		//========== Utils ==========
		implementation "org.projectlombok:lombok:${lombokVersion}"
		annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
		testImplementation "org.projectlombok:lombok:${lombokVersion}"
		testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  		//========== Test ==========
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
		testImplementation 'org.springframework.boot:spring-boot-testcontainers'
		testImplementation 'org.testcontainers:postgresql'
		testImplementation 'com.redis:testcontainers-redis'
		testImplementation 'org.testcontainers:junit-jupiter'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
		sourceCompatibility = JavaVersion.VERSION_21
		targetCompatibility = JavaVersion.VERSION_21
	}

	tasks.withType(Test) {
		useJUnitPlatform()
	}
}